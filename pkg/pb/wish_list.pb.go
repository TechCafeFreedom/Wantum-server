// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.12.4
// source: wish_list.proto

package pb

import (
	context "context"
	reflect "reflect"
	sync "sync"

	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// やりたいことリスト新規作成リクエスト
type CreateWishListInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// やりたいことリスト名
	Title string `protobuf:"bytes,1,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *CreateWishListInfoRequest) Reset() {
	*x = CreateWishListInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wish_list_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CreateWishListInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateWishListInfoRequest) ProtoMessage() {}

func (x *CreateWishListInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wish_list_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateWishListInfoRequest.ProtoReflect.Descriptor instead.
func (*CreateWishListInfoRequest) Descriptor() ([]byte, []int) {
	return file_wish_list_proto_rawDescGZIP(), []int{0}
}

func (x *CreateWishListInfoRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// やりたいことリスト（ID, titleのみ）の配列を取得するためのリクエスト
type GetWishListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 取得開始位置を知らせるためのやりたいことリストID
	WishListId int64 `protobuf:"varint,1,opt,name=wish_list_id,json=wishListId,proto3" json:"wish_list_id,omitempty"`
	// 最大取得件数
	Limit int64 `protobuf:"varint,2,opt,name=limit,proto3" json:"limit,omitempty"`
}

func (x *GetWishListRequest) Reset() {
	*x = GetWishListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wish_list_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWishListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWishListRequest) ProtoMessage() {}

func (x *GetWishListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wish_list_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWishListRequest.ProtoReflect.Descriptor instead.
func (*GetWishListRequest) Descriptor() ([]byte, []int) {
	return file_wish_list_proto_rawDescGZIP(), []int{1}
}

func (x *GetWishListRequest) GetWishListId() int64 {
	if x != nil {
		return x.WishListId
	}
	return 0
}

func (x *GetWishListRequest) GetLimit() int64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// IDをもとにやりたいことリストを1件取得するためのリクエスト
type GetWishListInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// やりたいことリストを特定するためのID
	WishListId int64 `protobuf:"varint,1,opt,name=wish_list_id,json=wishListId,proto3" json:"wish_list_id,omitempty"`
}

func (x *GetWishListInfoRequest) Reset() {
	*x = GetWishListInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wish_list_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWishListInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWishListInfoRequest) ProtoMessage() {}

func (x *GetWishListInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wish_list_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWishListInfoRequest.ProtoReflect.Descriptor instead.
func (*GetWishListInfoRequest) Descriptor() ([]byte, []int) {
	return file_wish_list_proto_rawDescGZIP(), []int{2}
}

func (x *GetWishListInfoRequest) GetWishListId() int64 {
	if x != nil {
		return x.WishListId
	}
	return 0
}

// やりたいことリスト名変更リクエスト
type UpdateWishListNameRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// やりたいことリストID
	WishListId int64 `protobuf:"varint,1,opt,name=wish_list_id,json=wishListId,proto3" json:"wish_list_id,omitempty"`
	// 新しいやりたいことリスト名
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
}

func (x *UpdateWishListNameRequest) Reset() {
	*x = UpdateWishListNameRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wish_list_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWishListNameRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWishListNameRequest) ProtoMessage() {}

func (x *UpdateWishListNameRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wish_list_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWishListNameRequest.ProtoReflect.Descriptor instead.
func (*UpdateWishListNameRequest) Descriptor() ([]byte, []int) {
	return file_wish_list_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateWishListNameRequest) GetWishListId() int64 {
	if x != nil {
		return x.WishListId
	}
	return 0
}

func (x *UpdateWishListNameRequest) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

// やりたいことリスト背景画像変更リクエスト
type UpdateWishListBackGroundImageRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// やりたいことリストID
	WishListId int64 `protobuf:"varint,1,opt,name=wish_list_id,json=wishListId,proto3" json:"wish_list_id,omitempty"`
	// 新しい背景画像ファイル
	BackgroundImage []byte `protobuf:"bytes,2,opt,name=background_image,json=backgroundImage,proto3" json:"background_image,omitempty"`
}

func (x *UpdateWishListBackGroundImageRequest) Reset() {
	*x = UpdateWishListBackGroundImageRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wish_list_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWishListBackGroundImageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWishListBackGroundImageRequest) ProtoMessage() {}

func (x *UpdateWishListBackGroundImageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wish_list_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWishListBackGroundImageRequest.ProtoReflect.Descriptor instead.
func (*UpdateWishListBackGroundImageRequest) Descriptor() ([]byte, []int) {
	return file_wish_list_proto_rawDescGZIP(), []int{4}
}

func (x *UpdateWishListBackGroundImageRequest) GetWishListId() int64 {
	if x != nil {
		return x.WishListId
	}
	return 0
}

func (x *UpdateWishListBackGroundImageRequest) GetBackgroundImage() []byte {
	if x != nil {
		return x.BackgroundImage
	}
	return nil
}

// やりたいことカテゴリーの並び替えリクエスト
type UpdateWishCategoryAndCardPositionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// やりたいことリストID
	WishListId int64 `protobuf:"varint,1,opt,name=wish_list_id,json=wishListId,proto3" json:"wish_list_id,omitempty"`
	// やりたいことカテゴリーの並び順（IDの配列）
	Position []*WishCategoryAndCardPosition `protobuf:"bytes,2,rep,name=position,proto3" json:"position,omitempty"`
}

func (x *UpdateWishCategoryAndCardPositionRequest) Reset() {
	*x = UpdateWishCategoryAndCardPositionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wish_list_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateWishCategoryAndCardPositionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateWishCategoryAndCardPositionRequest) ProtoMessage() {}

func (x *UpdateWishCategoryAndCardPositionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wish_list_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateWishCategoryAndCardPositionRequest.ProtoReflect.Descriptor instead.
func (*UpdateWishCategoryAndCardPositionRequest) Descriptor() ([]byte, []int) {
	return file_wish_list_proto_rawDescGZIP(), []int{5}
}

func (x *UpdateWishCategoryAndCardPositionRequest) GetWishListId() int64 {
	if x != nil {
		return x.WishListId
	}
	return 0
}

func (x *UpdateWishCategoryAndCardPositionRequest) GetPosition() []*WishCategoryAndCardPosition {
	if x != nil {
		return x.Position
	}
	return nil
}

// やりたいことカテゴリーとカードのポジションを表したもの
type WishCategoryAndCardPosition struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// やりたいことカテゴリーID
	WishCategoryId int64 `protobuf:"varint,1,opt,name=wish_category_id,json=wishCategoryId,proto3" json:"wish_category_id,omitempty"`
	// やりたいことカテゴリーに所属するカードのID一覧（並び順を表す配列）
	WishCardIds []int64 `protobuf:"varint,2,rep,packed,name=wish_card_ids,json=wishCardIds,proto3" json:"wish_card_ids,omitempty"`
}

func (x *WishCategoryAndCardPosition) Reset() {
	*x = WishCategoryAndCardPosition{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wish_list_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WishCategoryAndCardPosition) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WishCategoryAndCardPosition) ProtoMessage() {}

func (x *WishCategoryAndCardPosition) ProtoReflect() protoreflect.Message {
	mi := &file_wish_list_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WishCategoryAndCardPosition.ProtoReflect.Descriptor instead.
func (*WishCategoryAndCardPosition) Descriptor() ([]byte, []int) {
	return file_wish_list_proto_rawDescGZIP(), []int{6}
}

func (x *WishCategoryAndCardPosition) GetWishCategoryId() int64 {
	if x != nil {
		return x.WishCategoryId
	}
	return 0
}

func (x *WishCategoryAndCardPosition) GetWishCardIds() []int64 {
	if x != nil {
		return x.WishCardIds
	}
	return nil
}

// やりたいことリスト削除用リクエスト
type DeleteWishListInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 削除したいやりたいことリストのID
	WishListId int64 `protobuf:"varint,1,opt,name=wish_list_id,json=wishListId,proto3" json:"wish_list_id,omitempty"`
}

func (x *DeleteWishListInfoRequest) Reset() {
	*x = DeleteWishListInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wish_list_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DeleteWishListInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteWishListInfoRequest) ProtoMessage() {}

func (x *DeleteWishListInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wish_list_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteWishListInfoRequest.ProtoReflect.Descriptor instead.
func (*DeleteWishListInfoRequest) Descriptor() ([]byte, []int) {
	return file_wish_list_proto_rawDescGZIP(), []int{7}
}

func (x *DeleteWishListInfoRequest) GetWishListId() int64 {
	if x != nil {
		return x.WishListId
	}
	return 0
}

// やりたいことリストの一覧（配列）
type WishList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// やりたいことリスト一覧（配列）
	WishList []*WishListInfo `protobuf:"bytes,1,rep,name=wish_list,json=wishList,proto3" json:"wish_list,omitempty"`
}

func (x *WishList) Reset() {
	*x = WishList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wish_list_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WishList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WishList) ProtoMessage() {}

func (x *WishList) ProtoReflect() protoreflect.Message {
	mi := &file_wish_list_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WishList.ProtoReflect.Descriptor instead.
func (*WishList) Descriptor() ([]byte, []int) {
	return file_wish_list_proto_rawDescGZIP(), []int{8}
}

func (x *WishList) GetWishList() []*WishListInfo {
	if x != nil {
		return x.WishList
	}
	return nil
}

// やりたいことリスト情報
type WishListInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// やりたいことリストを特定するためのID
	WishListId int64 `protobuf:"varint,1,opt,name=wish_list_id,json=wishListId,proto3" json:"wish_list_id,omitempty"`
	// やりたいことリストタイトル
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// やりたいことカテゴリー一覧（配列）
	WishCategories []*WishCategoryInfo `protobuf:"bytes,3,rep,name=wish_categories,json=wishCategories,proto3" json:"wish_categories,omitempty"`
	// 編集権限を持っているユーザー一覧（配列）
	Authors []*UserInfo `protobuf:"bytes,4,rep,name=authors,proto3" json:"authors,omitempty"`
	// 招待リンク
	InviteUrl string `protobuf:"bytes,5,opt,name=invite_url,json=inviteUrl,proto3" json:"invite_url,omitempty"`
	// 背景画像URL
	BackgroundImageUrl string `protobuf:"bytes,6,opt,name=background_image_url,json=backgroundImageUrl,proto3" json:"background_image_url,omitempty"`
}

func (x *WishListInfo) Reset() {
	*x = WishListInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wish_list_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WishListInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WishListInfo) ProtoMessage() {}

func (x *WishListInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wish_list_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WishListInfo.ProtoReflect.Descriptor instead.
func (*WishListInfo) Descriptor() ([]byte, []int) {
	return file_wish_list_proto_rawDescGZIP(), []int{9}
}

func (x *WishListInfo) GetWishListId() int64 {
	if x != nil {
		return x.WishListId
	}
	return 0
}

func (x *WishListInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *WishListInfo) GetWishCategories() []*WishCategoryInfo {
	if x != nil {
		return x.WishCategories
	}
	return nil
}

func (x *WishListInfo) GetAuthors() []*UserInfo {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *WishListInfo) GetInviteUrl() string {
	if x != nil {
		return x.InviteUrl
	}
	return ""
}

func (x *WishListInfo) GetBackgroundImageUrl() string {
	if x != nil {
		return x.BackgroundImageUrl
	}
	return ""
}

var File_wish_list_proto protoreflect.FileDescriptor

var file_wish_list_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x77, 0x69, 0x73, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73,
	0x74, 0x1a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x13, 0x77,
	0x69, 0x73, 0x68, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x31, 0x0a, 0x19, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73,
	0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x22, 0x4c, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x77, 0x69, 0x73, 0x68,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x77, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x22, 0x3a, 0x0a, 0x16, 0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x77, 0x69,
	0x73, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x77, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x22, 0x53, 0x0a, 0x19,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61,
	0x6d, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x77, 0x69, 0x73,
	0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x77, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x22, 0x73, 0x0a, 0x24, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x69, 0x73, 0x68, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x77, 0x69, 0x73,
	0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x0a, 0x77, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x29, 0x0a, 0x10, 0x62,
	0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0f, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75, 0x6e,
	0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x22, 0x95, 0x01, 0x0a, 0x28, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x57, 0x69, 0x73, 0x68, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x41, 0x6e, 0x64,
	0x43, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x77, 0x69, 0x73, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x77, 0x69, 0x73, 0x68, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x47, 0x0a, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x2b, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f,
	0x77, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x57, 0x69, 0x73, 0x68, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x08, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x6b,
	0x0a, 0x1b, 0x57, 0x69, 0x73, 0x68, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x41, 0x6e,
	0x64, 0x43, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x73, 0x69, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x28, 0x0a,
	0x10, 0x77, 0x69, 0x73, 0x68, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x77, 0x69, 0x73, 0x68, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x22, 0x0a, 0x0d, 0x77, 0x69, 0x73, 0x68, 0x5f,
	0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x03, 0x52, 0x0b,
	0x77, 0x69, 0x73, 0x68, 0x43, 0x61, 0x72, 0x64, 0x49, 0x64, 0x73, 0x22, 0x3d, 0x0a, 0x19, 0x44,
	0x65, 0x6c, 0x65, 0x74, 0x65, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66,
	0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x20, 0x0a, 0x0c, 0x77, 0x69, 0x73, 0x68,
	0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a,
	0x77, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x08, 0x57, 0x69,
	0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x39, 0x0a, 0x09, 0x77, 0x69, 0x73, 0x68, 0x5f, 0x6c,
	0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x5f, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x57, 0x69, 0x73, 0x68, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x08, 0x77, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73,
	0x74, 0x22, 0x96, 0x02, 0x0a, 0x0c, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e,
	0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0c, 0x77, 0x69, 0x73, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x77, 0x69, 0x73, 0x68, 0x4c, 0x69,
	0x73, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c, 0x65, 0x12, 0x4d, 0x0a, 0x0f, 0x77, 0x69,
	0x73, 0x68, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x77, 0x69, 0x73, 0x68,
	0x63, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x2e, 0x57, 0x69, 0x73, 0x68, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x77, 0x69, 0x73, 0x68, 0x43,
	0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x0a, 0x07, 0x61, 0x75, 0x74,
	0x68, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f,
	0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x12, 0x1d, 0x0a, 0x0a, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x69,
	0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x30, 0x0a, 0x14, 0x62, 0x61, 0x63, 0x6b,
	0x67, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x5f, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x12, 0x62, 0x61, 0x63, 0x6b, 0x67, 0x72, 0x6f, 0x75,
	0x6e, 0x64, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x32, 0xb3, 0x05, 0x0a, 0x0f, 0x57,
	0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x5b,
	0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x77, 0x69, 0x73,
	0x68, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x57, 0x69, 0x73, 0x68,
	0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a,
	0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74,
	0x2e, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x4d, 0x0a, 0x0b, 0x47,
	0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x22, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x5f, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x47, 0x65, 0x74, 0x57,
	0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x18,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x22, 0x00, 0x12, 0x5b, 0x0a, 0x0f, 0x47, 0x65,
	0x74, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x26, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x47,
	0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x77, 0x69,
	0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x49,
	0x6e, 0x66, 0x6f, 0x22, 0x00, 0x30, 0x01, 0x12, 0x59, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74,
	0x65, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x4e, 0x61, 0x6d,
	0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79,
	0x22, 0x00, 0x12, 0x6f, 0x0a, 0x1d, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x69, 0x73, 0x68,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d,
	0x61, 0x67, 0x65, 0x12, 0x34, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x77, 0x69, 0x73, 0x68,
	0x6c, 0x69, 0x73, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x69, 0x73, 0x68, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x61, 0x63, 0x6b, 0x47, 0x72, 0x6f, 0x75, 0x6e, 0x64, 0x49, 0x6d, 0x61,
	0x67, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x22, 0x00, 0x12, 0x70, 0x0a, 0x1a, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x69, 0x73,
	0x68, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x50, 0x72, 0x69, 0x6f, 0x72, 0x69, 0x74,
	0x79, 0x12, 0x38, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x57, 0x69, 0x73, 0x68, 0x43, 0x61, 0x74,
	0x65, 0x67, 0x6f, 0x72, 0x79, 0x41, 0x6e, 0x64, 0x43, 0x61, 0x72, 0x64, 0x50, 0x6f, 0x73, 0x69,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d,
	0x70, 0x74, 0x79, 0x22, 0x00, 0x12, 0x59, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x57,
	0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x29, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x44, 0x65, 0x6c,
	0x65, 0x74, 0x65, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x00,
	0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wish_list_proto_rawDescOnce sync.Once
	file_wish_list_proto_rawDescData = file_wish_list_proto_rawDesc
)

func file_wish_list_proto_rawDescGZIP() []byte {
	file_wish_list_proto_rawDescOnce.Do(func() {
		file_wish_list_proto_rawDescData = protoimpl.X.CompressGZIP(file_wish_list_proto_rawDescData)
	})
	return file_wish_list_proto_rawDescData
}

var file_wish_list_proto_msgTypes = make([]protoimpl.MessageInfo, 10)
var file_wish_list_proto_goTypes = []interface{}{
	(*CreateWishListInfoRequest)(nil),                // 0: proto_wishlist.CreateWishListInfoRequest
	(*GetWishListRequest)(nil),                       // 1: proto_wishlist.GetWishListRequest
	(*GetWishListInfoRequest)(nil),                   // 2: proto_wishlist.GetWishListInfoRequest
	(*UpdateWishListNameRequest)(nil),                // 3: proto_wishlist.UpdateWishListNameRequest
	(*UpdateWishListBackGroundImageRequest)(nil),     // 4: proto_wishlist.UpdateWishListBackGroundImageRequest
	(*UpdateWishCategoryAndCardPositionRequest)(nil), // 5: proto_wishlist.UpdateWishCategoryAndCardPositionRequest
	(*WishCategoryAndCardPosition)(nil),              // 6: proto_wishlist.WishCategoryAndCardPosition
	(*DeleteWishListInfoRequest)(nil),                // 7: proto_wishlist.DeleteWishListInfoRequest
	(*WishList)(nil),                                 // 8: proto_wishlist.WishList
	(*WishListInfo)(nil),                             // 9: proto_wishlist.WishListInfo
	(*WishCategoryInfo)(nil),                         // 10: proto_wishcategory.WishCategoryInfo
	(*UserInfo)(nil),                                 // 11: proto_user.UserInfo
	(*empty.Empty)(nil),                              // 12: google.protobuf.Empty
}
var file_wish_list_proto_depIdxs = []int32{
	6,  // 0: proto_wishlist.UpdateWishCategoryAndCardPositionRequest.position:type_name -> proto_wishlist.WishCategoryAndCardPosition
	9,  // 1: proto_wishlist.WishList.wish_list:type_name -> proto_wishlist.WishListInfo
	10, // 2: proto_wishlist.WishListInfo.wish_categories:type_name -> proto_wishcategory.WishCategoryInfo
	11, // 3: proto_wishlist.WishListInfo.authors:type_name -> proto_user.UserInfo
	0,  // 4: proto_wishlist.WishListService.CreateWishListInfo:input_type -> proto_wishlist.CreateWishListInfoRequest
	1,  // 5: proto_wishlist.WishListService.GetWishList:input_type -> proto_wishlist.GetWishListRequest
	2,  // 6: proto_wishlist.WishListService.GetWishListInfo:input_type -> proto_wishlist.GetWishListInfoRequest
	3,  // 7: proto_wishlist.WishListService.UpdateWishListName:input_type -> proto_wishlist.UpdateWishListNameRequest
	4,  // 8: proto_wishlist.WishListService.UpdateWishListBackGroundImage:input_type -> proto_wishlist.UpdateWishListBackGroundImageRequest
	5,  // 9: proto_wishlist.WishListService.UpdateWishCategoryPriority:input_type -> proto_wishlist.UpdateWishCategoryAndCardPositionRequest
	7,  // 10: proto_wishlist.WishListService.DeleteWishListInfo:input_type -> proto_wishlist.DeleteWishListInfoRequest
	8,  // 11: proto_wishlist.WishListService.CreateWishListInfo:output_type -> proto_wishlist.WishList
	8,  // 12: proto_wishlist.WishListService.GetWishList:output_type -> proto_wishlist.WishList
	9,  // 13: proto_wishlist.WishListService.GetWishListInfo:output_type -> proto_wishlist.WishListInfo
	12, // 14: proto_wishlist.WishListService.UpdateWishListName:output_type -> google.protobuf.Empty
	12, // 15: proto_wishlist.WishListService.UpdateWishListBackGroundImage:output_type -> google.protobuf.Empty
	12, // 16: proto_wishlist.WishListService.UpdateWishCategoryPriority:output_type -> google.protobuf.Empty
	12, // 17: proto_wishlist.WishListService.DeleteWishListInfo:output_type -> google.protobuf.Empty
	11, // [11:18] is the sub-list for method output_type
	4,  // [4:11] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_wish_list_proto_init() }
func file_wish_list_proto_init() {
	if File_wish_list_proto != nil {
		return
	}
	file_user_proto_init()
	file_wish_category_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_wish_list_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CreateWishListInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wish_list_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWishListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wish_list_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWishListInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wish_list_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWishListNameRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wish_list_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWishListBackGroundImageRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wish_list_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateWishCategoryAndCardPositionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wish_list_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WishCategoryAndCardPosition); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wish_list_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DeleteWishListInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wish_list_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WishList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wish_list_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WishListInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wish_list_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   10,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wish_list_proto_goTypes,
		DependencyIndexes: file_wish_list_proto_depIdxs,
		MessageInfos:      file_wish_list_proto_msgTypes,
	}.Build()
	File_wish_list_proto = out.File
	file_wish_list_proto_rawDesc = nil
	file_wish_list_proto_goTypes = nil
	file_wish_list_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WishListServiceClient is the client API for WishListService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WishListServiceClient interface {
	// やりたいことリストの新規作成
	CreateWishListInfo(ctx context.Context, in *CreateWishListInfoRequest, opts ...grpc.CallOption) (*WishList, error)
	// やりたいことリスト一覧取得
	GetWishList(ctx context.Context, in *GetWishListRequest, opts ...grpc.CallOption) (*WishList, error)
	// やりたいことリスト単体取得
	GetWishListInfo(ctx context.Context, in *GetWishListInfoRequest, opts ...grpc.CallOption) (WishListService_GetWishListInfoClient, error)
	// やりたいことリスト名更新
	UpdateWishListName(ctx context.Context, in *UpdateWishListNameRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// やりたいことリストの背景画像更新
	UpdateWishListBackGroundImage(ctx context.Context, in *UpdateWishListBackGroundImageRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// やりたいことカテゴリー、カードの並び順更新
	UpdateWishCategoryPriority(ctx context.Context, in *UpdateWishCategoryAndCardPositionRequest, opts ...grpc.CallOption) (*empty.Empty, error)
	// やりたいことリスト自体の削除
	DeleteWishListInfo(ctx context.Context, in *DeleteWishListInfoRequest, opts ...grpc.CallOption) (*empty.Empty, error)
}

type wishListServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWishListServiceClient(cc grpc.ClientConnInterface) WishListServiceClient {
	return &wishListServiceClient{cc}
}

func (c *wishListServiceClient) CreateWishListInfo(ctx context.Context, in *CreateWishListInfoRequest, opts ...grpc.CallOption) (*WishList, error) {
	out := new(WishList)
	err := c.cc.Invoke(ctx, "/proto_wishlist.WishListService/CreateWishListInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wishListServiceClient) GetWishList(ctx context.Context, in *GetWishListRequest, opts ...grpc.CallOption) (*WishList, error) {
	out := new(WishList)
	err := c.cc.Invoke(ctx, "/proto_wishlist.WishListService/GetWishList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wishListServiceClient) GetWishListInfo(ctx context.Context, in *GetWishListInfoRequest, opts ...grpc.CallOption) (WishListService_GetWishListInfoClient, error) {
	stream, err := c.cc.NewStream(ctx, &_WishListService_serviceDesc.Streams[0], "/proto_wishlist.WishListService/GetWishListInfo", opts...)
	if err != nil {
		return nil, err
	}
	x := &wishListServiceGetWishListInfoClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type WishListService_GetWishListInfoClient interface {
	Recv() (*WishListInfo, error)
	grpc.ClientStream
}

type wishListServiceGetWishListInfoClient struct {
	grpc.ClientStream
}

func (x *wishListServiceGetWishListInfoClient) Recv() (*WishListInfo, error) {
	m := new(WishListInfo)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *wishListServiceClient) UpdateWishListName(ctx context.Context, in *UpdateWishListNameRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto_wishlist.WishListService/UpdateWishListName", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wishListServiceClient) UpdateWishListBackGroundImage(ctx context.Context, in *UpdateWishListBackGroundImageRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto_wishlist.WishListService/UpdateWishListBackGroundImage", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wishListServiceClient) UpdateWishCategoryPriority(ctx context.Context, in *UpdateWishCategoryAndCardPositionRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto_wishlist.WishListService/UpdateWishCategoryPriority", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wishListServiceClient) DeleteWishListInfo(ctx context.Context, in *DeleteWishListInfoRequest, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/proto_wishlist.WishListService/DeleteWishListInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WishListServiceServer is the server API for WishListService service.
type WishListServiceServer interface {
	// やりたいことリストの新規作成
	CreateWishListInfo(context.Context, *CreateWishListInfoRequest) (*WishList, error)
	// やりたいことリスト一覧取得
	GetWishList(context.Context, *GetWishListRequest) (*WishList, error)
	// やりたいことリスト単体取得
	GetWishListInfo(*GetWishListInfoRequest, WishListService_GetWishListInfoServer) error
	// やりたいことリスト名更新
	UpdateWishListName(context.Context, *UpdateWishListNameRequest) (*empty.Empty, error)
	// やりたいことリストの背景画像更新
	UpdateWishListBackGroundImage(context.Context, *UpdateWishListBackGroundImageRequest) (*empty.Empty, error)
	// やりたいことカテゴリー、カードの並び順更新
	UpdateWishCategoryPriority(context.Context, *UpdateWishCategoryAndCardPositionRequest) (*empty.Empty, error)
	// やりたいことリスト自体の削除
	DeleteWishListInfo(context.Context, *DeleteWishListInfoRequest) (*empty.Empty, error)
}

// UnimplementedWishListServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWishListServiceServer struct {
}

func (*UnimplementedWishListServiceServer) CreateWishListInfo(context.Context, *CreateWishListInfoRequest) (*WishList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method CreateWishListInfo not implemented")
}
func (*UnimplementedWishListServiceServer) GetWishList(context.Context, *GetWishListRequest) (*WishList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWishList not implemented")
}
func (*UnimplementedWishListServiceServer) GetWishListInfo(*GetWishListInfoRequest, WishListService_GetWishListInfoServer) error {
	return status.Errorf(codes.Unimplemented, "method GetWishListInfo not implemented")
}
func (*UnimplementedWishListServiceServer) UpdateWishListName(context.Context, *UpdateWishListNameRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWishListName not implemented")
}
func (*UnimplementedWishListServiceServer) UpdateWishListBackGroundImage(context.Context, *UpdateWishListBackGroundImageRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWishListBackGroundImage not implemented")
}
func (*UnimplementedWishListServiceServer) UpdateWishCategoryPriority(context.Context, *UpdateWishCategoryAndCardPositionRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method UpdateWishCategoryPriority not implemented")
}
func (*UnimplementedWishListServiceServer) DeleteWishListInfo(context.Context, *DeleteWishListInfoRequest) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method DeleteWishListInfo not implemented")
}

func RegisterWishListServiceServer(s *grpc.Server, srv WishListServiceServer) {
	s.RegisterService(&_WishListService_serviceDesc, srv)
}

func _WishListService_CreateWishListInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CreateWishListInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WishListServiceServer).CreateWishListInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_wishlist.WishListService/CreateWishListInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WishListServiceServer).CreateWishListInfo(ctx, req.(*CreateWishListInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WishListService_GetWishList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWishListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WishListServiceServer).GetWishList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_wishlist.WishListService/GetWishList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WishListServiceServer).GetWishList(ctx, req.(*GetWishListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WishListService_GetWishListInfo_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(GetWishListInfoRequest)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(WishListServiceServer).GetWishListInfo(m, &wishListServiceGetWishListInfoServer{stream})
}

type WishListService_GetWishListInfoServer interface {
	Send(*WishListInfo) error
	grpc.ServerStream
}

type wishListServiceGetWishListInfoServer struct {
	grpc.ServerStream
}

func (x *wishListServiceGetWishListInfoServer) Send(m *WishListInfo) error {
	return x.ServerStream.SendMsg(m)
}

func _WishListService_UpdateWishListName_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateWishListNameRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WishListServiceServer).UpdateWishListName(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_wishlist.WishListService/UpdateWishListName",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WishListServiceServer).UpdateWishListName(ctx, req.(*UpdateWishListNameRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WishListService_UpdateWishListBackGroundImage_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateWishListBackGroundImageRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WishListServiceServer).UpdateWishListBackGroundImage(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_wishlist.WishListService/UpdateWishListBackGroundImage",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WishListServiceServer).UpdateWishListBackGroundImage(ctx, req.(*UpdateWishListBackGroundImageRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WishListService_UpdateWishCategoryPriority_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(UpdateWishCategoryAndCardPositionRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WishListServiceServer).UpdateWishCategoryPriority(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_wishlist.WishListService/UpdateWishCategoryPriority",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WishListServiceServer).UpdateWishCategoryPriority(ctx, req.(*UpdateWishCategoryAndCardPositionRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _WishListService_DeleteWishListInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(DeleteWishListInfoRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WishListServiceServer).DeleteWishListInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_wishlist.WishListService/DeleteWishListInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WishListServiceServer).DeleteWishListInfo(ctx, req.(*DeleteWishListInfoRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WishListService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto_wishlist.WishListService",
	HandlerType: (*WishListServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "CreateWishListInfo",
			Handler:    _WishListService_CreateWishListInfo_Handler,
		},
		{
			MethodName: "GetWishList",
			Handler:    _WishListService_GetWishList_Handler,
		},
		{
			MethodName: "UpdateWishListName",
			Handler:    _WishListService_UpdateWishListName_Handler,
		},
		{
			MethodName: "UpdateWishListBackGroundImage",
			Handler:    _WishListService_UpdateWishListBackGroundImage_Handler,
		},
		{
			MethodName: "UpdateWishCategoryPriority",
			Handler:    _WishListService_UpdateWishCategoryPriority_Handler,
		},
		{
			MethodName: "DeleteWishListInfo",
			Handler:    _WishListService_DeleteWishListInfo_Handler,
		},
	},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "GetWishListInfo",
			Handler:       _WishListService_GetWishListInfo_Handler,
			ServerStreams: true,
		},
	},
	Metadata: "wish_list.proto",
}
