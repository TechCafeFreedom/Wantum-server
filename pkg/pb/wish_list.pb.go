// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.24.0
// 	protoc        v3.12.4
// source: wish_list.proto

package pb

import (
	context "context"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

// IDをもとにやりたいことリストを1件取得するためのリクエスト
type GetWishListRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// やりたいことリストを特定するためのID
	WishListId int64 `protobuf:"varint,1,opt,name=wish_list_id,json=wishListId,proto3" json:"wish_list_id,omitempty"`
}

func (x *GetWishListRequest) Reset() {
	*x = GetWishListRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wish_list_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetWishListRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetWishListRequest) ProtoMessage() {}

func (x *GetWishListRequest) ProtoReflect() protoreflect.Message {
	mi := &file_wish_list_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetWishListRequest.ProtoReflect.Descriptor instead.
func (*GetWishListRequest) Descriptor() ([]byte, []int) {
	return file_wish_list_proto_rawDescGZIP(), []int{0}
}

func (x *GetWishListRequest) GetWishListId() int64 {
	if x != nil {
		return x.WishListId
	}
	return 0
}

// やりたいことリストの一覧（配列）
type WishList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// やりたいことリスト一覧（配列）
	WishList []*WishListInfo `protobuf:"bytes,1,rep,name=wish_list,json=wishList,proto3" json:"wish_list,omitempty"`
}

func (x *WishList) Reset() {
	*x = WishList{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wish_list_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WishList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WishList) ProtoMessage() {}

func (x *WishList) ProtoReflect() protoreflect.Message {
	mi := &file_wish_list_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WishList.ProtoReflect.Descriptor instead.
func (*WishList) Descriptor() ([]byte, []int) {
	return file_wish_list_proto_rawDescGZIP(), []int{1}
}

func (x *WishList) GetWishList() []*WishListInfo {
	if x != nil {
		return x.WishList
	}
	return nil
}

// やりたいことリスト情報
type WishListInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// やりたいことリストを特定するためのID
	WishListId int64 `protobuf:"varint,1,opt,name=wish_list_id,json=wishListId,proto3" json:"wish_list_id,omitempty"`
	// やりたいことリストタイトル
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// やりたいことカテゴリー一覧（配列）
	WishCategories []*WishCategoryInfo `protobuf:"bytes,3,rep,name=wish_categories,json=wishCategories,proto3" json:"wish_categories,omitempty"`
	// 編集権限を持っているユーザー一覧（配列）
	Authors []*UserInfo `protobuf:"bytes,4,rep,name=authors,proto3" json:"authors,omitempty"`
	// 招待リンク
	InviteUrl string `protobuf:"bytes,5,opt,name=invite_url,json=inviteUrl,proto3" json:"invite_url,omitempty"`
}

func (x *WishListInfo) Reset() {
	*x = WishListInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wish_list_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WishListInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WishListInfo) ProtoMessage() {}

func (x *WishListInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wish_list_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WishListInfo.ProtoReflect.Descriptor instead.
func (*WishListInfo) Descriptor() ([]byte, []int) {
	return file_wish_list_proto_rawDescGZIP(), []int{2}
}

func (x *WishListInfo) GetWishListId() int64 {
	if x != nil {
		return x.WishListId
	}
	return 0
}

func (x *WishListInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *WishListInfo) GetWishCategories() []*WishCategoryInfo {
	if x != nil {
		return x.WishCategories
	}
	return nil
}

func (x *WishListInfo) GetAuthors() []*UserInfo {
	if x != nil {
		return x.Authors
	}
	return nil
}

func (x *WishListInfo) GetInviteUrl() string {
	if x != nil {
		return x.InviteUrl
	}
	return ""
}

// やりたいことカテゴリー情報
type WishCategoryInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// やりたいことカテゴリーを特定するためのID
	WishCategoryId int64 `protobuf:"varint,1,opt,name=wish_category_id,json=wishCategoryId,proto3" json:"wish_category_id,omitempty"`
	// やりたいことカテゴリー名
	Title string `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	// カテゴリー内のやりたいことカード一覧（配列）
	WishCards []*WishCardInfo `protobuf:"bytes,3,rep,name=wish_cards,json=wishCards,proto3" json:"wish_cards,omitempty"`
}

func (x *WishCategoryInfo) Reset() {
	*x = WishCategoryInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wish_list_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WishCategoryInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WishCategoryInfo) ProtoMessage() {}

func (x *WishCategoryInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wish_list_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WishCategoryInfo.ProtoReflect.Descriptor instead.
func (*WishCategoryInfo) Descriptor() ([]byte, []int) {
	return file_wish_list_proto_rawDescGZIP(), []int{3}
}

func (x *WishCategoryInfo) GetWishCategoryId() int64 {
	if x != nil {
		return x.WishCategoryId
	}
	return 0
}

func (x *WishCategoryInfo) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *WishCategoryInfo) GetWishCards() []*WishCardInfo {
	if x != nil {
		return x.WishCards
	}
	return nil
}

// やりたいことカード情報（wish_card）
type WishCardInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// wish_cardを特定するためのID
	WishCardId int64 `protobuf:"varint,1,opt,name=wish_card_id,json=wishCardId,proto3" json:"wish_card_id,omitempty"`
	// 何をしたいのか
	Activity string `protobuf:"bytes,2,opt,name=activity,proto3" json:"activity,omitempty"`
	// やりたいことの説明
	Description string `protobuf:"bytes,3,opt,name=description,proto3" json:"description,omitempty"`
	// いつやりたいか（日付）
	Date string `protobuf:"bytes,4,opt,name=date,proto3" json:"date,omitempty"`
	// 完了日時
	DoneAt string `protobuf:"bytes,5,opt,name=done_at,json=doneAt,proto3" json:"done_at,omitempty"`
	// どこでそれをしたいのか
	Place string `protobuf:"bytes,6,opt,name=place,proto3" json:"place,omitempty"`
	// タグ一覧（配列）
	Tags []string `protobuf:"bytes,7,rep,name=tags,proto3" json:"tags,omitempty"`
}

func (x *WishCardInfo) Reset() {
	*x = WishCardInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_wish_list_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WishCardInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WishCardInfo) ProtoMessage() {}

func (x *WishCardInfo) ProtoReflect() protoreflect.Message {
	mi := &file_wish_list_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WishCardInfo.ProtoReflect.Descriptor instead.
func (*WishCardInfo) Descriptor() ([]byte, []int) {
	return file_wish_list_proto_rawDescGZIP(), []int{4}
}

func (x *WishCardInfo) GetWishCardId() int64 {
	if x != nil {
		return x.WishCardId
	}
	return 0
}

func (x *WishCardInfo) GetActivity() string {
	if x != nil {
		return x.Activity
	}
	return ""
}

func (x *WishCardInfo) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *WishCardInfo) GetDate() string {
	if x != nil {
		return x.Date
	}
	return ""
}

func (x *WishCardInfo) GetDoneAt() string {
	if x != nil {
		return x.DoneAt
	}
	return ""
}

func (x *WishCardInfo) GetPlace() string {
	if x != nil {
		return x.Place
	}
	return ""
}

func (x *WishCardInfo) GetTags() []string {
	if x != nil {
		return x.Tags
	}
	return nil
}

var File_wish_list_proto protoreflect.FileDescriptor

var file_wish_list_proto_rawDesc = []byte{
	0x0a, 0x0f, 0x77, 0x69, 0x73, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x12, 0x0e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73,
	0x74, 0x1a, 0x0a, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x36, 0x0a, 0x12, 0x47, 0x65,
	0x74, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x20, 0x0a, 0x0c, 0x77, 0x69, 0x73, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x77, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74,
	0x49, 0x64, 0x22, 0x45, 0x0a, 0x08, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x39,
	0x0a, 0x09, 0x77, 0x69, 0x73, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x08, 0x77, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x22, 0xe0, 0x01, 0x0a, 0x0c, 0x57, 0x69,
	0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x20, 0x0a, 0x0c, 0x77, 0x69,
	0x73, 0x68, 0x5f, 0x6c, 0x69, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x0a, 0x77, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74,
	0x6c, 0x65, 0x12, 0x49, 0x0a, 0x0f, 0x77, 0x69, 0x73, 0x68, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67,
	0x6f, 0x72, 0x69, 0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x5f, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x57, 0x69, 0x73,
	0x68, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0e, 0x77,
	0x69, 0x73, 0x68, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x69, 0x65, 0x73, 0x12, 0x2e, 0x0a,
	0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x14,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x75, 0x73, 0x65, 0x72, 0x2e, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x07, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x73, 0x12, 0x1d, 0x0a,
	0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x8f, 0x01, 0x0a,
	0x10, 0x57, 0x69, 0x73, 0x68, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x6e, 0x66,
	0x6f, 0x12, 0x28, 0x0a, 0x10, 0x77, 0x69, 0x73, 0x68, 0x5f, 0x63, 0x61, 0x74, 0x65, 0x67, 0x6f,
	0x72, 0x79, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x77, 0x69, 0x73,
	0x68, 0x43, 0x61, 0x74, 0x65, 0x67, 0x6f, 0x72, 0x79, 0x49, 0x64, 0x12, 0x14, 0x0a, 0x05, 0x74,
	0x69, 0x74, 0x6c, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x69, 0x74, 0x6c,
	0x65, 0x12, 0x3b, 0x0a, 0x0a, 0x77, 0x69, 0x73, 0x68, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x73, 0x18,
	0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x77, 0x69,
	0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x2e, 0x57, 0x69, 0x73, 0x68, 0x43, 0x61, 0x72, 0x64, 0x49,
	0x6e, 0x66, 0x6f, 0x52, 0x09, 0x77, 0x69, 0x73, 0x68, 0x43, 0x61, 0x72, 0x64, 0x73, 0x22, 0xc5,
	0x01, 0x0a, 0x0c, 0x57, 0x69, 0x73, 0x68, 0x43, 0x61, 0x72, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x20, 0x0a, 0x0c, 0x77, 0x69, 0x73, 0x68, 0x5f, 0x63, 0x61, 0x72, 0x64, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x77, 0x69, 0x73, 0x68, 0x43, 0x61, 0x72, 0x64, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x61, 0x63, 0x74, 0x69, 0x76, 0x69, 0x74, 0x79, 0x12, 0x20, 0x0a,
	0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0b, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x12, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x64,
	0x61, 0x74, 0x65, 0x12, 0x17, 0x0a, 0x07, 0x64, 0x6f, 0x6e, 0x65, 0x5f, 0x61, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x06, 0x64, 0x6f, 0x6e, 0x65, 0x41, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x6c, 0x61, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x6c, 0x61,
	0x63, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x61, 0x67, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x61, 0x67, 0x73, 0x32, 0xa7, 0x01, 0x0a, 0x0f, 0x57, 0x69, 0x73, 0x68, 0x4c,
	0x69, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x3f, 0x0a, 0x0b, 0x47, 0x65,
	0x74, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74,
	0x79, 0x1a, 0x18, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69,
	0x73, 0x74, 0x2e, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x53, 0x0a, 0x0f, 0x47,
	0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x22,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x77, 0x69, 0x73, 0x68, 0x6c, 0x69, 0x73, 0x74, 0x2e,
	0x47, 0x65, 0x74, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x5f, 0x77, 0x69, 0x73, 0x68, 0x6c,
	0x69, 0x73, 0x74, 0x2e, 0x57, 0x69, 0x73, 0x68, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x6e, 0x66, 0x6f,
	0x42, 0x06, 0x5a, 0x04, 0x2e, 0x3b, 0x70, 0x62, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_wish_list_proto_rawDescOnce sync.Once
	file_wish_list_proto_rawDescData = file_wish_list_proto_rawDesc
)

func file_wish_list_proto_rawDescGZIP() []byte {
	file_wish_list_proto_rawDescOnce.Do(func() {
		file_wish_list_proto_rawDescData = protoimpl.X.CompressGZIP(file_wish_list_proto_rawDescData)
	})
	return file_wish_list_proto_rawDescData
}

var file_wish_list_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_wish_list_proto_goTypes = []interface{}{
	(*GetWishListRequest)(nil), // 0: proto_wishlist.GetWishListRequest
	(*WishList)(nil),           // 1: proto_wishlist.WishList
	(*WishListInfo)(nil),       // 2: proto_wishlist.WishListInfo
	(*WishCategoryInfo)(nil),   // 3: proto_wishlist.WishCategoryInfo
	(*WishCardInfo)(nil),       // 4: proto_wishlist.WishCardInfo
	(*UserInfo)(nil),           // 5: proto_user.UserInfo
	(*empty.Empty)(nil),        // 6: google.protobuf.Empty
}
var file_wish_list_proto_depIdxs = []int32{
	2, // 0: proto_wishlist.WishList.wish_list:type_name -> proto_wishlist.WishListInfo
	3, // 1: proto_wishlist.WishListInfo.wish_categories:type_name -> proto_wishlist.WishCategoryInfo
	5, // 2: proto_wishlist.WishListInfo.authors:type_name -> proto_user.UserInfo
	4, // 3: proto_wishlist.WishCategoryInfo.wish_cards:type_name -> proto_wishlist.WishCardInfo
	6, // 4: proto_wishlist.WishListService.GetWishList:input_type -> google.protobuf.Empty
	0, // 5: proto_wishlist.WishListService.GetWishListInfo:input_type -> proto_wishlist.GetWishListRequest
	1, // 6: proto_wishlist.WishListService.GetWishList:output_type -> proto_wishlist.WishList
	2, // 7: proto_wishlist.WishListService.GetWishListInfo:output_type -> proto_wishlist.WishListInfo
	6, // [6:8] is the sub-list for method output_type
	4, // [4:6] is the sub-list for method input_type
	4, // [4:4] is the sub-list for extension type_name
	4, // [4:4] is the sub-list for extension extendee
	0, // [0:4] is the sub-list for field type_name
}

func init() { file_wish_list_proto_init() }
func file_wish_list_proto_init() {
	if File_wish_list_proto != nil {
		return
	}
	file_user_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_wish_list_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetWishListRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wish_list_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WishList); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wish_list_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WishListInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wish_list_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WishCategoryInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_wish_list_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WishCardInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_wish_list_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_wish_list_proto_goTypes,
		DependencyIndexes: file_wish_list_proto_depIdxs,
		MessageInfos:      file_wish_list_proto_msgTypes,
	}.Build()
	File_wish_list_proto = out.File
	file_wish_list_proto_rawDesc = nil
	file_wish_list_proto_goTypes = nil
	file_wish_list_proto_depIdxs = nil
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConnInterface

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion6

// WishListServiceClient is the client API for WishListService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type WishListServiceClient interface {
	// やりたいことリスト一覧取得
	GetWishList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*WishList, error)
	// やりたいことリスト単体取得
	GetWishListInfo(ctx context.Context, in *GetWishListRequest, opts ...grpc.CallOption) (*WishListInfo, error)
}

type wishListServiceClient struct {
	cc grpc.ClientConnInterface
}

func NewWishListServiceClient(cc grpc.ClientConnInterface) WishListServiceClient {
	return &wishListServiceClient{cc}
}

func (c *wishListServiceClient) GetWishList(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*WishList, error) {
	out := new(WishList)
	err := c.cc.Invoke(ctx, "/proto_wishlist.WishListService/GetWishList", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *wishListServiceClient) GetWishListInfo(ctx context.Context, in *GetWishListRequest, opts ...grpc.CallOption) (*WishListInfo, error) {
	out := new(WishListInfo)
	err := c.cc.Invoke(ctx, "/proto_wishlist.WishListService/GetWishListInfo", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// WishListServiceServer is the server API for WishListService service.
type WishListServiceServer interface {
	// やりたいことリスト一覧取得
	GetWishList(context.Context, *empty.Empty) (*WishList, error)
	// やりたいことリスト単体取得
	GetWishListInfo(context.Context, *GetWishListRequest) (*WishListInfo, error)
}

// UnimplementedWishListServiceServer can be embedded to have forward compatible implementations.
type UnimplementedWishListServiceServer struct {
}

func (*UnimplementedWishListServiceServer) GetWishList(context.Context, *empty.Empty) (*WishList, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWishList not implemented")
}
func (*UnimplementedWishListServiceServer) GetWishListInfo(context.Context, *GetWishListRequest) (*WishListInfo, error) {
	return nil, status.Errorf(codes.Unimplemented, "method GetWishListInfo not implemented")
}

func RegisterWishListServiceServer(s *grpc.Server, srv WishListServiceServer) {
	s.RegisterService(&_WishListService_serviceDesc, srv)
}

func _WishListService_GetWishList_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WishListServiceServer).GetWishList(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_wishlist.WishListService/GetWishList",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WishListServiceServer).GetWishList(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _WishListService_GetWishListInfo_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(GetWishListRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(WishListServiceServer).GetWishListInfo(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/proto_wishlist.WishListService/GetWishListInfo",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(WishListServiceServer).GetWishListInfo(ctx, req.(*GetWishListRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _WishListService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "proto_wishlist.WishListService",
	HandlerType: (*WishListServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "GetWishList",
			Handler:    _WishListService_GetWishList_Handler,
		},
		{
			MethodName: "GetWishListInfo",
			Handler:    _WishListService_GetWishListInfo_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "wish_list.proto",
}
