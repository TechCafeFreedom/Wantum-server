# CI 静的解析(fmt, lint)、テストのフローを自動化
# トリガー: 全ブランチに対するPR
name: CI

on:
    pull_request:
        branches:
            - '*'

env:
    # go.sumに変化がない時にキャッシュを更新したい場合は、変更してください
    cache-version: v1

jobs:
    # static-check: fmt, lint
    static-check:
        name: StaticCheck
        runs-on: ubuntu-latest

        steps:
            # set up go
            -   name: Set up Go 1.14
                uses: actions/setup-go@v1
                with:
                    go-version: 1.14
                id: go

            -   name: Check out code into the Go module directory
                uses: actions/checkout@v2

            # Run fmt
            -   name: Go fmt
                run: |
                    GO111MODULE=off go get -u golang.org/x/tools/cmd/goimports
                    gofmt -s -w .
                    ~/go/bin/goimports -w .

            # Run lint
            -   name: Go Lint
                run: |
                    GO111MODULE=on go get github.com/golangci/golangci-lint/cmd/golangci-lint
                    ~/go/bin/golangci-lint run

    # test go test
    test:
        name: Test
        runs-on: ubuntu-latest
        needs: [ static-check ]

        steps:
            # set up go
            -   name: Set up Go 1.14
                uses: actions/setup-go@v1
                with:
                    go-version: 1.14
                id: go

            -   name: Check out code into the Go module directory
                uses: actions/checkout@v2

            # Cache
            -   name: Cache go module
                uses: actions/cache@v1
                id: cache-go
                with:
                    path: ~/go/pkg/mod
                    key: ${{ env.cache-version }}-${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
                    restore-keys: |
                        ${{ env.cache-version }}-${{ runner.os }}-go-

            # Install modules
            -   name: Get dependencies
                if: steps.cache-go.outputs.cache-hit != 'true'
                run: |
                    go get -v -t -d ./...

            # Run test
            -   name: Test
                run: go test -v ./...
