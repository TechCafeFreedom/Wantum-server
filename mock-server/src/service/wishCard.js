const protoUtil = require("../utility/protoUtil");
const WishCardResourceBuilder = require("../resource/wishCard");
const TagResourceBuilder = require("../resource/tag");

module.exports = class WishCardService {
  constructor() {
    const protoDescriptor = protoUtil.getProtoDescriptor("wish_card.proto");
    this.wishCardProto = protoDescriptor.proto_wishcard;
  }

  createWishCardInfo(call, callback) {
    // TODO: なんかreturnがemptyらしいよ
    callback(
      null,
      new WishCardResourceBuilder()
        .withActivity(call.request.activity)
        .withDescription(call.request.description)
        .withDate(call.request.date)
        .withPlace(call.request.place)
        .build()
    );
  }
  
  updateWishCardActivity(call, callback) {
    callback(
      null,
      new WishCardResourceBuilder()
        .withWishCardId(call.request.wish_card_id)
        .withActivity(call.request.activity)
        .withAutoGeneratedTags(2)
        .build()
    );
  }
  
  updateWishCardDescription(call, callback) {
    callback(
      null,
      new WishCardResourceBuilder()
        .withWishCardId(call.request.wish_card_id)
        .withDescription(call.request.description)
        .withAutoGeneratedTags(2)
        .build()
    );
  }
  
  updateWishCardDate(call, callback) {
    callback(
      null,
      new WishCardResourceBuilder()
        .withWishCardId(call.request.wish_card_id)
        .withDate(call.request.date)
        .withAutoGeneratedTags(2)
        .build()
    );
  }
  
  updateWishCardPlace(call, callback) {
    callback(
      null,
      new WishCardResourceBuilder()
        .withWishCardId(call.request.wish_card_id)
        .withPlace(call.request.place)
        .withAutoGeneratedTags(2)
        .build()
    );
  }
  
  addWishCardTags(call, callback) {
    const tags = call.request.tag_names
      .map((tag, idx) => new TagResourceBuilder()
        .withTagId(idx + 1)
        .withTagName(`tag${idx + 1}`)
        .build());
    callback(
      null,
      new WishCardResourceBuilder()
        .withWishCardId(call.request.wish_card_id)
        .withTags(tags)
        .build()
    );
  }
  
  deleteWishCardTags(call, callback) {
    callback(
      null,
      new WishCardResourceBuilder()
        .withWishCardId(call.request.wish_card_id)
        .withPlace(call.request.place)
        .build()
    );
  }
  // TODO: wishCardそのものの削除ってないのか...
};